<platformUi:DialogWindow x:Class="DpdtInject.Extension.AddBindingWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:local="clr-namespace:DpdtInject.Extension"
              mc:Ignorable="d" 
              xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
              xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
              xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
              xmlns:helper="clr-namespace:DpdtInject.Extension.Helper"
              xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
              Height="300" Width="500" 
              MinHeight="300" MinWidth="500"
              WindowStyle="SingleBorderWindow"
              ResizeMode="CanResize"
              ShowInTaskbar="False"
              SnapsToDevicePixels="True"
              Title="Add new binding..."
              Name="AddBindingWindowName"
              Loaded="AddBindingWindow_OnLoaded"
              KeyUp="AddBindingWindow_OnKeyUp"
              Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
              WindowStartupLocation="CenterOwner"
              d:DesignHeight="500" d:DesignWidth="500">

    <Window.Resources>

    </Window.Resources>

    <Grid
        Name="MainGrid"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Visibility="{Binding MainGridVisibility}"
        >
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid
            Name="ChooseConstructorGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding ChooseConstructorGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>


            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a constructor to bind:"
                />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.ConstructorList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <RadioButton
                                Grid.Column="0"
                                GroupName="ConstructorRadioButtonGroup"
                                Foreground="{Binding ForegroundColor}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                Content="{Binding VisualRepresentation}"
                                />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

        <Grid
            Name="ChooseConstructorArgumentGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding ChooseConstructorArgumentGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a manual defined arguments:"
            />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.ConstructorArgumentList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <CheckBox
                                Grid.Column="0"
                                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                >
                                <CheckBox.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding VisualRepresentationTypeAndName}"
                                        />
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="Gray"
                                            Margin="10,0,0,0"
                                            Text="{Binding VisualRepresentationNamespace}"
                                            />
                                    </Grid>
                                </CheckBox.Content>
                            </CheckBox>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>
        </Grid>

        <Grid
            Name="ChooseBindFromGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding ChooseBindFromGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a bind from:"
            />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.BindFromList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <CheckBox
                                Grid.Column="0"
                                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                >
                                <CheckBox.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding VisualRepresentationTypeName}"
                                        />
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="Gray"
                                            Margin="10,0,0,0"
                                            Text="{Binding VisualRepresentationNamespace}"
                                            />
                                    </Grid>
                                </CheckBox.Content>
                            </CheckBox>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </Grid>

        <Grid
            Name="ChooseTargetMethodGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding ChooseTargetMethodGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>


            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a target method:"
            />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.TargetMethodList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <RadioButton
                                Grid.Column="0"
                                GroupName="TargetMethodRadioButtonGroup"
                                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                >
                                <RadioButton.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding VisualRepresentationClassMethod}"
                                        />
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="Gray"
                                            Margin="10,0,0,0"
                                            Text="{Binding VisualRepresentationNamespace}"
                                            />
                                    </Grid>
                                </RadioButton.Content>
                            </RadioButton>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

        </Grid>

        <Grid
            Name="ChooseAdditionalParametersGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Visibility="{Binding ChooseAdditionalParametersGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose an additional parameters:"
            />

            <Grid
                Grid.Row="1"
                VerticalAlignment="Bottom"
                Margin="10,0,10,0"
                >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <RadioButton
                    Grid.Column="0"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsSingleton, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Singleton"
                    />
                <RadioButton
                    Grid.Column="1"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsTransient, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Transient"
                />
                <RadioButton
                    Grid.Column="2"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsCustom, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Custom"
                />
                <RadioButton
                    Grid.Column="3"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsConstant, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Constant"
                />

            </Grid>

            <CheckBox
                Grid.Row="2"
                Margin="2"
                HorizontalAlignment="Right"
                IsChecked="{Binding DataContext.IsConditionalBinding, Mode=TwoWay, ElementName=AddBindingWindowName}"
                Content="Conditional binding"
                VerticalContentAlignment="Center"
                />

        </Grid>
        
        <Grid
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            Margin="0,10,0,0"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- <CheckBox
                    Grid.Column="0"
                    Margin="2"
                    HorizontalAlignment="Left"
                    IsChecked="{Binding DataContext.IsConditionalBinding, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Conditional binding"
                    VerticalContentAlignment="Center"
                    /> -->
            <Button
                    Grid.Column="0"
                    Margin="2"
                    Padding="5,2,5,2"
                    HorizontalAlignment="Left"
                    Content="Cancel"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=AddBindingWindowName}"
                    />

            <Button
                    Grid.Column="1"
                    Margin="2"
                    Padding="5,2,5,2"
                    HorizontalAlignment="Right"
                    Content="Back"
                    Command="{Binding PreviousCommand}"
                    />

            <Button
                    Grid.Column="2"
                    Margin="2"
                    Padding="5,2,5,2"
                    HorizontalAlignment="Right"
                    Content="{Binding NextButtonTitle}"
                    Command="{Binding NextCommand}"
                    CommandParameter="{Binding ElementName=AddBindingWindowName}"
                    />

        </Grid>


    </Grid>

    <!--  -->
    
    
    <!--<Grid>

        <Grid
            Name="MainGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding MainGridVisibility}"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>


            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a constructor to bind:"
                />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.ConstructorList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <RadioButton
                                Grid.Column="0"
                                GroupName="ConstructorRadioButtonGroup"
                                Foreground="{Binding ForegroundColor}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                Content="{Binding VisualRepresentation}"
                                />
                            --><!--Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"--><!--

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a bind from:"
            />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.BindFromList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <CheckBox
                                Grid.Column="0"
                                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                >
                                <CheckBox.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding VisualRepresentationTypeName}"
                                        />
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="Gray"
                                            Margin="10,0,0,0"
                                            Text="{Binding VisualRepresentationNamespace}"
                                            />
                                    </Grid>
                                </CheckBox.Content>
                            </CheckBox>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

            <TextBlock
                Grid.Row="0"
                Margin="2"
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                Text="Choose a target method to bind:"
            />


            <ListView
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                Margin="2"
                ItemsSource="{Binding Path=DataContext.(local:AddBindingViewModel.BindMethodList), ElementName=AddBindingWindowName}"
                >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <RadioButton
                                Grid.Column="0"
                                GroupName="BindMethodRadioButtonGroup"
                                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                >
                                <RadioButton.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Text="{Binding VisualRepresentationClassMethod}"
                                        />
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="Gray"
                                            Margin="10,0,0,0"
                                            Text="{Binding VisualRepresentationNamespace}"
                                            />
                                    </Grid>
                                </RadioButton.Content>
                            </RadioButton>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>


            <Grid
                Grid.Row="0"
                Margin="10,0,10,0"
                >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <RadioButton
                    Grid.Column="0"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsSingleton, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Singleton"
                    />
                <RadioButton
                    Grid.Column="1"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsTransient, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Transient"
                />
                <RadioButton
                    Grid.Column="2"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsCustom, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Custom"
                />
                <RadioButton
                    Grid.Column="3"
                    GroupName="BindScopeGroup"
                    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                    IsChecked="{Binding DataContext.IsConstant, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Constant"
                />

            </Grid>

            <Grid
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Margin="0,10,0,0"
                >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox
                    Grid.Column="0"
                    Margin="2"
                    HorizontalAlignment="Left"
                    IsChecked="{Binding DataContext.IsConditionalBinding, Mode=TwoWay, ElementName=AddBindingWindowName}"
                    Content="Conditional binding"
                    VerticalContentAlignment="Center"
                    />

                <Button
                    Grid.Column="1"
                    Margin="2"
                    Padding="5,2,5,2"
                    HorizontalAlignment="Right"
                    Content="Alt+_1 Create"
                    />

                <Button
                    Grid.Column="2"
                    Margin="2"
                    Padding="5,2,5,2"
                    HorizontalAlignment="Right"
                    Content="Alt+_2 Cancel"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=AddBindingWindowName}"
                    />

            </Grid>
        
        </Grid>

        <Grid
            Name="LoadingGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding LoadingGridVisibility}"
            >

            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="Data is loading..."
                Background="Transparent"
                Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                />

        </Grid>



    </Grid>
-->
</platformUi:DialogWindow>
